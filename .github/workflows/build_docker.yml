# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  APP_NAME: zihjiang/filling
  DOCKERHUB_REPO: zihjiang/filling
jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm install
    - run: npm run build --if-present
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Generate App Version
      run: echo APP_VERSION=`echo $GITHUB_REF_NAME|sed -e "s/releases\///g"` >> $GITHUB_ENV
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        build-args: |
          APP_VERSION=${{ env.APP_VERSION }}
          APP_VERSION=${{ env.APP_NAME }}
        push: true
        tags: |
            ${{ env.APP_NAME }}:latest
            ${{ env.APP_NAME }}:${{ env.APP_VERSION }}
